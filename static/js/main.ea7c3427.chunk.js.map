{"version":3,"sources":["reportWebVitals.js","components/card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","robots.js","components/errorboundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","React","createElement","className","alt","src","console","log","CardList","robots","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","username","ErrorBoundary","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","event","target","value","componentDidMount","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.ea7c3427.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Card = ({name,email,id}) =>{ //the cards needs to accept parameters now. and these parameters are the properties\r\n    //const {name,props,id} = props;\r\n    return(\r\n        // <h1>RoboFriends</h1> -title cant do this here because we can only return 1 thing\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'> \r\n\r\n            <img alt ='robots' src={`https://robohash.org/${id}?200x200`} />\r\n           \r\n\r\n            {/* <div>\r\n            {console.log(props.id)}\r\n                <h2>jane Doe</h2>\r\n                <p>janedoe@gmail.com</p>\r\n            </div> */}\r\n            <div>\r\n            {console.log(id)}\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./card\";\r\n\r\n\r\n//static test 1\r\n// const CardList = ({robots}) =>{\r\n//     return(\r\n//         <div>\r\n//         <Card id = {robots[0].id} name={robots[0].name} email={robots[0].email}/>\r\n//         <Card id = {robots[1].id} name={robots[1].name} email={robots[1].email}/>\r\n//         <Card id = {robots[2].id} name={robots[2].name} email={robots[2].email}/>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n\r\nconst CardList = ({robots}) =>{\r\n    \r\n    return(\r\n        <div>\r\n       \r\n       {\r\n       robots.map((user, i) => \r\n        {\r\n        return (\r\n        \r\n        <Card\r\n            key = {i}\r\n            id  = {robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n           />\r\n        );\r\n\r\n    })}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return(\r\n        <div className='pa2'>\r\n\r\n         <input\r\n         className='pa3 ba b--green bg-lightest-blue'\r\n         type='search'\r\n         placeholder='search robots' \r\n         onChange={searchChange}\r\n         />\r\n\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\"; \r\nconst Scroll = (props) => {\r\n    // console.log(props);\r\n    return (\r\n        <div style={{overflowY:'scroll', border:'5px solid black', height: '500px' }}>\r\n            {props.children}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Scroll;","export const robots = [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"John Doe\",\r\n        \"username\": \"johndoe123\",\r\n        \"email\": \"johndoe@example.com\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"name\": \"Jane Smith\",\r\n        \"username\": \"janesmith456\",\r\n        \"email\": \"janesmith@example.com\"\r\n      },\r\n      {\r\n        \"id\": 3,\r\n        \"name\": \"Alice Johnson\",\r\n        \"username\": \"alicej\",\r\n        \"email\": \"alice.j@example.com\"\r\n      },\r\n      {\r\n        \"id\": 4,\r\n        \"name\": \"Bob Brown\",\r\n        \"username\": \"bobbrown789\",\r\n        \"email\": \"bob.brown@example.com\"\r\n      },\r\n      {\r\n        \"id\": 5,\r\n        \"name\": \"Emily Davis\",\r\n        \"username\": \"emilyd\",\r\n        \"email\": \"emily.d@example.com\"\r\n      },\r\n      {\r\n        \"id\": 6,\r\n        \"name\": \"Michael Wilson\",\r\n        \"username\": \"michaelw\",\r\n        \"email\": \"michael.w@example.com\"\r\n      },\r\n      {\r\n        \"id\": 7,\r\n        \"name\": \"Sarah Martinez\",\r\n        \"username\": \"sarahm123\",\r\n        \"email\": \"sarah.m@example.com\"\r\n      },\r\n      {\r\n        \"id\": 8,\r\n        \"name\": \"David Taylor\",\r\n        \"username\": \"davidt456\",\r\n        \"email\": \"david.t@example.com\"\r\n      },\r\n      {\r\n        \"id\": 9,\r\n        \"name\": \"Olivia Garcia\",\r\n        \"username\": \"oliviag\",\r\n        \"email\": \"olivia.g@example.com\"\r\n      },\r\n      {\r\n        \"id\": 10,\r\n        \"name\": \"James Rodriguez\",\r\n        \"username\": \"jamesr789\",\r\n        \"email\": \"james.r@example.com\"\r\n      }\r\n    ];\r\n  ","import React, {Component} from \"react\";\r\nclass ErrorBoundary extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true})\r\n\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>OOOOps.This is not good </h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary","import React, { Component } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\n// import { robots } from \"../robots\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\nimport Scroll from \"../components/Scroll\";\r\nimport { robots } from \"../robots\";\r\nimport ErrorBoundary from '../components/errorboundary';\r\n\r\n\r\n// const state = {\r\n//     robots: robots,\r\n//     searchfield:''\r\n// }\r\n\r\n\r\nclass App extends Component\r\n{ constructor(){\r\n    super()\r\n    this.state = {\r\n         robots: [],\r\n        searchfield:''\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    // console.log(\"check\");\r\n    // this.setState({ robots: robots});\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => {this.setState({robots:users})})\r\n    \r\n    \r\n    \r\n    \r\n}\r\n\r\nonSearchChange = (event) => {\r\n    this.setState({searchfield: event.target.value })\r\n    console.log(event.target.value);\r\n    \r\n    console.log(event.target.value);\r\n}\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robots=>{\r\n            return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        })\r\n        if(!robots.length\r\n\r\n        ) {\r\n            return <h1> Loading </h1>\r\n        } else{\r\n            \r\n            return(\r\n                <div className=\"tc\">\r\n                        <h1 className=\"f1 \" >Robofriends</h1>\r\n                        <SearchBox searchChange = {this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <ErrorBoundary>\r\n                            <CardList robots={filteredRobots}/>\r\n                            \r\n                            </ErrorBoundary>\r\n                            \r\n                        </Scroll>\r\n                        \r\n                </div>\r\n                \r\n            );\r\n\r\n        }\r\n\r\n\r\n\r\n       \r\n\r\n    }\r\n\r\n} \r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// import App from './App';\n// import Hello from './Hello.js'; \nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import Card from './card';\n// import CardList from './CardList';\nimport App from './containers/App';\n// import { HelloCheckProps } from './Hello.js' ;\n// import {robots} from './robots'; //destructuring because its not default\n\nconst root = ReactDOM.createRoot( document.getElementById('root'));\nroot.render(\n  // <CardList robots={robots}/>,\n  <App />,\n  // <React.StrictMode>\n  //   <h1>hello world from index.js</h1>\n\n   \n  // </React.StrictMode>\n  \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}